origin   shared.relish.pl2012
artifact relish_tests
package  concurrency 

""" 
 concurrency.rel

 Test go-routines, Channels, and Mutex locks.
"""


import
   strings
   datetime
   test


Buffer
"""
 Implements a String buffer
"""
   s 0 N [] String


spew b Buffer mx Mutex chin InChannel inNum Int chout OutChannel outNum Int n Int
"""
 Exchanges data on channels and prints out what it is doing.
"""
   i = 0
   while lt i 2000
      i = plus i 1 
      lock mx
      b.s += cat i " about to send " n " to ch " outNum
      unlock mx      
      chout <- n  
      lock mx 
      b.s += cat i " sent " n " to ch " outNum
      b.s += cat i " about to receive something from ch " inNum      
      unlock mx      
      m = <- chin
      lock mx    
      b.s += cat i " got " m " from ch " inNum
      unlock mx


main
"""
 Main program.
"""
   testConcurrency


testConcurrency
"""
 Tests Mutexes, Channels, and go-routines. 

 This program keeps running and spewing output to stdout.
"""
   passed = true
   
   print "===== Concurrency"

   b = Buffer  

   ch1 = Channel
            1
   ch2 = Channel
   mx = Mutex

   go spew b mx ch1 1 ch2 2 5

   spew b mx ch2 2 ch1 1 3

   sleep seconds 3

   passed = and assertEq (len b.s) 16000 "number of messages through channels"
                passed
   if passed             
      print "PASSED"
