origin   shared.relish.pl2012
artifact relish_tests
package  init_and_removal 

""" 
 init_and_removal.rel

 Test initialization of attribute values of objects, before and after persistence, and also,
 test removal of relation assocations between objects, and database deletion of objects.

 Requirements and Design
 -----------------------
 Desirable properties of this behaviour in the language:


"""


import
   strings


Alpha
"""
 A datatype for testing initialization of values, removal of relation associations, etc.
"""
   bool ?Bool
   betaAttr ?Beta


Beta
"""
 A datatype for testing initialization of values, removal of relation associations, etc.
"""
   int ?Int
   string ?String
   float ?Float


Alpha 0 1 -- 1 Beta


main
"""
 Main program.
"""
   testir


testInitAndRemoval
"""
 Tests how attribute values are initialized, before and after persistence.
"""
   a1 = Alpha
   b1 = Beta

   a1.betaAttr = nil

   print "Before persistence"
   print "a1.bool" a1.bool
   print "a1.betaAttr" a1.betaAttr
   print "b1.int" b1.int
   print "b1.string" (cat "\"" b1.string "\"")
   print "b1.float" b1.float

   print "b1.alpha" b1.alpha
   a1.beta = b1
   print "a1.beta" a1.beta
   print "b1.alpha" b1.alpha

   b1.alpha = nil

   print "b1.alpha" b1.alpha
   print "a1.beta" a1.beta


testir
"""
 If it finds "ALPHA1" in the database, runs testir2, else runs testir1 which puts "ALPHA1" in the database.
"""
   if exists "ALPHA1"
      testir2
   else
      testir1


testir1
"""
 Tests before persistence.
"""
   a1 = Alpha
   b1 = Beta


   print "Before persistence"
   print "b1.alpha" b1.alpha
   // print "a1.beta" a1.beta   
   a1.beta = b1
   print "b1.alpha" b1.alpha   
   print "a1.beta" a1.beta

   dub a1 "ALPHA1"


testir2
"""
 Tests after fetching persisted objects and relation.
"""
   a1 = summon "ALPHA1"

   b3 = Beta

   print "After fetched"
   // print "a1.beta" a1.beta
   // b1 = a1.beta
   // print "b1.alpha" b1.alpha      

   // a1.beta = nil

   print "After removal after fetching"
   // print "a1.beta" a1.beta
   // b1 = a1.beta   
   // print "b1.alpha" b1.alpha


   a1.beta = b3

   print "After readdition after fetching and removal"
   print "a1.beta" a1.beta
   b1 = a1.beta   
   print "b1.alpha" b1.alpha
