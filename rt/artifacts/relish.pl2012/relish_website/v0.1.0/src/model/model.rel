origin   relish.pl2012
artifact relish_website
package  model

"""
 model.rel

 Data types used to represent relish code origins and other entities associated with sharing relish code.
"""


import
   strings
   datetime


Origin
"""
 A relish code origin that has registered at shared.relish.pl.
"""
   ident String
   contactGivenName String
   contactFamilyName String
   organization String
   department String
   email String
   pwHash String
   isPublic Bool
   isVerified Bool  // true if email sent to origin email address was confirmed received
   emailVerificationToken String  // used to verify that an email sent to the origin was received 
   publicKeyCert String
   registered Time


originIdError originId String > String
"""
 Checks that the origin id has valid syntax and is not a duplicate of an already registered origin.
 Returns "" if origin is ok, else an error message.
"""
   if not originId
      => "Please enter an origin id. e.g. foo.org2013"
   if neq originId (lower originId)
      => "The origin id must be lowercase."
   if lt (index originId ".") 1
      => "The origin id must include an internet domain name. Example: foo.org2013"
   // TODO: Need regexp matching library in relish
   if exists originId
      => cat "The origin '" originId "' is already registered. Please choose another origin id."
   => ""


RelishDistribution  
"""
 Keeps track of the number of downloads of a given version and platform of relish binary distribution
"""
   majorVersion Int
   minorVersion Int
   patchVersion Int
   platform String
   numDownloads Int
   firstDownload Time
   hundredthDownload Time
   lastDownload Time
   

recordDownload fileName String
"""
 Record a download of a relish binary distribution file. 
"""
   t = now "UTC"
   if exists fileName
      dist = summon fileName
      dist.numDownloads = plus dist.numDownloads 1
      if eq dist.numDownloads 100
         dist.hundredthDownload = t
   else
      // relish_0.0.9.darwin_amd64.tar.gz
      tarPos = index fileName ".tar.gz"
      if gt tarPos 0
         fileRoot = slice fileName 7 tarPos
      else  // must be .pkg or .msi
         fileRoot = slice fileName 7 -4
      lastDotPos = lastIndex fileRoot "."
      platform = slice fileRoot (plus lastDotPos 1)
      version = slice fileRoot 0 lastDotPos
      dotPos = index version "."
      lastDotPos = lastIndex version "."  
      major err = Int slice version 0 dotPos
      minor err = Int slice version (plus dotPos 1) lastDotPos
      patch err = Int slice version (plus lastDotPos 1)          

      dist = RelishDistribution
      dist.majorVersion = major
      dist.minorVersion = minor
      dist.patchVersion = patch
      dist.platform = platform
      dist.numDownloads = 1
      dist.firstDownload = t      
      dub dist fileName
      
   dist.lastDownload = t
      
